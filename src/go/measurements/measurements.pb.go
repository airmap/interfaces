// Code generated by protoc-gen-go. DO NOT EDIT.
// source: measurements/measurements.proto

package measurements

import (
	fmt "fmt"
	_ "github.com/airmap/interfaces/src/go"
	units "github.com/airmap/interfaces/src/go/units"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference enumerates all known reference/datum systems for altitude measurements.
type Altitude_Reference int32

const (
	Altitude_REFERENCE_UNKNOWN Altitude_Reference = 0
	Altitude_ELLIPSOID         Altitude_Reference = 1
	Altitude_GEOID             Altitude_Reference = 2
	Altitude_SURFACE           Altitude_Reference = 3 // Deprecated: Do not use.
	Altitude_EXTERNAL          Altitude_Reference = 4 // Deprecated: Do not use.
	Altitude_STANDARD_BARO     Altitude_Reference = 5
	Altitude_LOCAL_BARO        Altitude_Reference = 6
)

var Altitude_Reference_name = map[int32]string{
	0: "REFERENCE_UNKNOWN",
	1: "ELLIPSOID",
	2: "GEOID",
	3: "SURFACE",
	4: "EXTERNAL",
	5: "STANDARD_BARO",
	6: "LOCAL_BARO",
}

var Altitude_Reference_value = map[string]int32{
	"REFERENCE_UNKNOWN": 0,
	"ELLIPSOID":         1,
	"GEOID":             2,
	"SURFACE":           3,
	"EXTERNAL":          4,
	"STANDARD_BARO":     5,
	"LOCAL_BARO":        6,
}

func (x Altitude_Reference) String() string {
	return proto.EnumName(Altitude_Reference_name, int32(x))
}

func (Altitude_Reference) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{2, 0}
}

// Position models a spatial location.
type Position struct {
	// Details is a descriminated union of all Position types
	//
	// Types that are valid to be assigned to Details:
	//	*Position_Absolute_
	//	*Position_Relative_
	Details              isPosition_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{0}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

type isPosition_Details interface {
	isPosition_Details()
}

type Position_Absolute_ struct {
	Absolute *Position_Absolute `protobuf:"bytes,1,opt,name=absolute,proto3,oneof"`
}

type Position_Relative_ struct {
	Relative *Position_Relative `protobuf:"bytes,2,opt,name=relative,proto3,oneof"`
}

func (*Position_Absolute_) isPosition_Details() {}

func (*Position_Relative_) isPosition_Details() {}

func (m *Position) GetDetails() isPosition_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Position) GetAbsolute() *Position_Absolute {
	if x, ok := m.GetDetails().(*Position_Absolute_); ok {
		return x.Absolute
	}
	return nil
}

func (m *Position) GetRelative() *Position_Relative {
	if x, ok := m.GetDetails().(*Position_Relative_); ok {
		return x.Relative
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Position) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Position_Absolute_)(nil),
		(*Position_Relative_)(nil),
	}
}

// Absolute models an absolute position.
type Position_Absolute struct {
	Coordinate           *Coordinate2D `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	Altitude             *Altitude     `protobuf:"bytes,2,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Position_Absolute) Reset()         { *m = Position_Absolute{} }
func (m *Position_Absolute) String() string { return proto.CompactTextString(m) }
func (*Position_Absolute) ProtoMessage()    {}
func (*Position_Absolute) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{0, 0}
}

func (m *Position_Absolute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position_Absolute.Unmarshal(m, b)
}
func (m *Position_Absolute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position_Absolute.Marshal(b, m, deterministic)
}
func (m *Position_Absolute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position_Absolute.Merge(m, src)
}
func (m *Position_Absolute) XXX_Size() int {
	return xxx_messageInfo_Position_Absolute.Size(m)
}
func (m *Position_Absolute) XXX_DiscardUnknown() {
	xxx_messageInfo_Position_Absolute.DiscardUnknown(m)
}

var xxx_messageInfo_Position_Absolute proto.InternalMessageInfo

func (m *Position_Absolute) GetCoordinate() *Coordinate2D {
	if m != nil {
		return m.Coordinate
	}
	return nil
}

func (m *Position_Absolute) GetAltitude() *Altitude {
	if m != nil {
		return m.Altitude
	}
	return nil
}

// Relative models a position relative to an absolute position.
type Position_Relative struct {
	Reference            *Position_Absolute       `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Distance             *units.Meters            `protobuf:"bytes,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Azimuth              *units.Degrees           `protobuf:"bytes,3,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Error                *Position_Relative_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Position_Relative) Reset()         { *m = Position_Relative{} }
func (m *Position_Relative) String() string { return proto.CompactTextString(m) }
func (*Position_Relative) ProtoMessage()    {}
func (*Position_Relative) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{0, 1}
}

func (m *Position_Relative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position_Relative.Unmarshal(m, b)
}
func (m *Position_Relative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position_Relative.Marshal(b, m, deterministic)
}
func (m *Position_Relative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position_Relative.Merge(m, src)
}
func (m *Position_Relative) XXX_Size() int {
	return xxx_messageInfo_Position_Relative.Size(m)
}
func (m *Position_Relative) XXX_DiscardUnknown() {
	xxx_messageInfo_Position_Relative.DiscardUnknown(m)
}

var xxx_messageInfo_Position_Relative proto.InternalMessageInfo

func (m *Position_Relative) GetReference() *Position_Absolute {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *Position_Relative) GetDistance() *units.Meters {
	if m != nil {
		return m.Distance
	}
	return nil
}

func (m *Position_Relative) GetAzimuth() *units.Degrees {
	if m != nil {
		return m.Azimuth
	}
	return nil
}

func (m *Position_Relative) GetError() *Position_Relative_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Position_Relative_Error struct {
	Distance             *units.Meters  `protobuf:"bytes,1,opt,name=distance,proto3" json:"distance,omitempty"`
	Azimuth              *units.Degrees `protobuf:"bytes,2,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Position_Relative_Error) Reset()         { *m = Position_Relative_Error{} }
func (m *Position_Relative_Error) String() string { return proto.CompactTextString(m) }
func (*Position_Relative_Error) ProtoMessage()    {}
func (*Position_Relative_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{0, 1, 0}
}

func (m *Position_Relative_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position_Relative_Error.Unmarshal(m, b)
}
func (m *Position_Relative_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position_Relative_Error.Marshal(b, m, deterministic)
}
func (m *Position_Relative_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position_Relative_Error.Merge(m, src)
}
func (m *Position_Relative_Error) XXX_Size() int {
	return xxx_messageInfo_Position_Relative_Error.Size(m)
}
func (m *Position_Relative_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Position_Relative_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Position_Relative_Error proto.InternalMessageInfo

func (m *Position_Relative_Error) GetDistance() *units.Meters {
	if m != nil {
		return m.Distance
	}
	return nil
}

func (m *Position_Relative_Error) GetAzimuth() *units.Degrees {
	if m != nil {
		return m.Azimuth
	}
	return nil
}

// Coordinate2D models a WGS84 latitude and longitude.
type Coordinate2D struct {
	Latitude             *units.Degrees      `protobuf:"bytes,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            *units.Degrees      `protobuf:"bytes,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Error                *Coordinate2D_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Coordinate2D) Reset()         { *m = Coordinate2D{} }
func (m *Coordinate2D) String() string { return proto.CompactTextString(m) }
func (*Coordinate2D) ProtoMessage()    {}
func (*Coordinate2D) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{1}
}

func (m *Coordinate2D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinate2D.Unmarshal(m, b)
}
func (m *Coordinate2D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinate2D.Marshal(b, m, deterministic)
}
func (m *Coordinate2D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinate2D.Merge(m, src)
}
func (m *Coordinate2D) XXX_Size() int {
	return xxx_messageInfo_Coordinate2D.Size(m)
}
func (m *Coordinate2D) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinate2D.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinate2D proto.InternalMessageInfo

func (m *Coordinate2D) GetLatitude() *units.Degrees {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *Coordinate2D) GetLongitude() *units.Degrees {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *Coordinate2D) GetError() *Coordinate2D_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in a coordinate measurement.
type Coordinate2D_Error struct {
	Latitude             *units.Degrees `protobuf:"bytes,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            *units.Degrees `protobuf:"bytes,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Coordinate2D_Error) Reset()         { *m = Coordinate2D_Error{} }
func (m *Coordinate2D_Error) String() string { return proto.CompactTextString(m) }
func (*Coordinate2D_Error) ProtoMessage()    {}
func (*Coordinate2D_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{1, 0}
}

func (m *Coordinate2D_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinate2D_Error.Unmarshal(m, b)
}
func (m *Coordinate2D_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinate2D_Error.Marshal(b, m, deterministic)
}
func (m *Coordinate2D_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinate2D_Error.Merge(m, src)
}
func (m *Coordinate2D_Error) XXX_Size() int {
	return xxx_messageInfo_Coordinate2D_Error.Size(m)
}
func (m *Coordinate2D_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinate2D_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinate2D_Error proto.InternalMessageInfo

func (m *Coordinate2D_Error) GetLatitude() *units.Degrees {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *Coordinate2D_Error) GetLongitude() *units.Degrees {
	if m != nil {
		return m.Longitude
	}
	return nil
}

// Altitude models a height measurement from a given datum/reference.
type Altitude struct {
	Height               *units.Meters      `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Reference            Altitude_Reference `protobuf:"varint,2,opt,name=reference,proto3,enum=measurements.Altitude_Reference" json:"reference,omitempty"`
	Error                *Altitude_Error    `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Altitude) Reset()         { *m = Altitude{} }
func (m *Altitude) String() string { return proto.CompactTextString(m) }
func (*Altitude) ProtoMessage()    {}
func (*Altitude) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{2}
}

func (m *Altitude) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Altitude.Unmarshal(m, b)
}
func (m *Altitude) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Altitude.Marshal(b, m, deterministic)
}
func (m *Altitude) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Altitude.Merge(m, src)
}
func (m *Altitude) XXX_Size() int {
	return xxx_messageInfo_Altitude.Size(m)
}
func (m *Altitude) XXX_DiscardUnknown() {
	xxx_messageInfo_Altitude.DiscardUnknown(m)
}

var xxx_messageInfo_Altitude proto.InternalMessageInfo

func (m *Altitude) GetHeight() *units.Meters {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *Altitude) GetReference() Altitude_Reference {
	if m != nil {
		return m.Reference
	}
	return Altitude_REFERENCE_UNKNOWN
}

func (m *Altitude) GetError() *Altitude_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in the altitude measurement.
type Altitude_Error struct {
	Height               *units.Meters `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Altitude_Error) Reset()         { *m = Altitude_Error{} }
func (m *Altitude_Error) String() string { return proto.CompactTextString(m) }
func (*Altitude_Error) ProtoMessage()    {}
func (*Altitude_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{2, 0}
}

func (m *Altitude_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Altitude_Error.Unmarshal(m, b)
}
func (m *Altitude_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Altitude_Error.Marshal(b, m, deterministic)
}
func (m *Altitude_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Altitude_Error.Merge(m, src)
}
func (m *Altitude_Error) XXX_Size() int {
	return xxx_messageInfo_Altitude_Error.Size(m)
}
func (m *Altitude_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Altitude_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Altitude_Error proto.InternalMessageInfo

func (m *Altitude_Error) GetHeight() *units.Meters {
	if m != nil {
		return m.Height
	}
	return nil
}

// Velocity models a velocity measurement.
type Velocity struct {
	// Types that are valid to be assigned to Details:
	//	*Velocity_Polar_
	//	*Velocity_Cartesian_
	Details              isVelocity_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Velocity) Reset()         { *m = Velocity{} }
func (m *Velocity) String() string { return proto.CompactTextString(m) }
func (*Velocity) ProtoMessage()    {}
func (*Velocity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{3}
}

func (m *Velocity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Velocity.Unmarshal(m, b)
}
func (m *Velocity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Velocity.Marshal(b, m, deterministic)
}
func (m *Velocity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Velocity.Merge(m, src)
}
func (m *Velocity) XXX_Size() int {
	return xxx_messageInfo_Velocity.Size(m)
}
func (m *Velocity) XXX_DiscardUnknown() {
	xxx_messageInfo_Velocity.DiscardUnknown(m)
}

var xxx_messageInfo_Velocity proto.InternalMessageInfo

type isVelocity_Details interface {
	isVelocity_Details()
}

type Velocity_Polar_ struct {
	Polar *Velocity_Polar `protobuf:"bytes,1,opt,name=polar,proto3,oneof"`
}

type Velocity_Cartesian_ struct {
	Cartesian *Velocity_Cartesian `protobuf:"bytes,2,opt,name=cartesian,proto3,oneof"`
}

func (*Velocity_Polar_) isVelocity_Details() {}

func (*Velocity_Cartesian_) isVelocity_Details() {}

func (m *Velocity) GetDetails() isVelocity_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Velocity) GetPolar() *Velocity_Polar {
	if x, ok := m.GetDetails().(*Velocity_Polar_); ok {
		return x.Polar
	}
	return nil
}

func (m *Velocity) GetCartesian() *Velocity_Cartesian {
	if x, ok := m.GetDetails().(*Velocity_Cartesian_); ok {
		return x.Cartesian
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Velocity) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Velocity_Polar_)(nil),
		(*Velocity_Cartesian_)(nil),
	}
}

// Polar Velocity models a velocity relative to a heading.
type Velocity_Polar struct {
	Heading              *units.Degrees         `protobuf:"bytes,1,opt,name=heading,proto3" json:"heading,omitempty"`
	Rate                 *units.MetersPerSecond `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Error                *Velocity_Polar_Error  `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Velocity_Polar) Reset()         { *m = Velocity_Polar{} }
func (m *Velocity_Polar) String() string { return proto.CompactTextString(m) }
func (*Velocity_Polar) ProtoMessage()    {}
func (*Velocity_Polar) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{3, 0}
}

func (m *Velocity_Polar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Velocity_Polar.Unmarshal(m, b)
}
func (m *Velocity_Polar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Velocity_Polar.Marshal(b, m, deterministic)
}
func (m *Velocity_Polar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Velocity_Polar.Merge(m, src)
}
func (m *Velocity_Polar) XXX_Size() int {
	return xxx_messageInfo_Velocity_Polar.Size(m)
}
func (m *Velocity_Polar) XXX_DiscardUnknown() {
	xxx_messageInfo_Velocity_Polar.DiscardUnknown(m)
}

var xxx_messageInfo_Velocity_Polar proto.InternalMessageInfo

func (m *Velocity_Polar) GetHeading() *units.Degrees {
	if m != nil {
		return m.Heading
	}
	return nil
}

func (m *Velocity_Polar) GetRate() *units.MetersPerSecond {
	if m != nil {
		return m.Rate
	}
	return nil
}

func (m *Velocity_Polar) GetError() *Velocity_Polar_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in the polar velocity measurement.
type Velocity_Polar_Error struct {
	Heading              *units.Degrees         `protobuf:"bytes,1,opt,name=heading,proto3" json:"heading,omitempty"`
	Rate                 *units.MetersPerSecond `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Velocity_Polar_Error) Reset()         { *m = Velocity_Polar_Error{} }
func (m *Velocity_Polar_Error) String() string { return proto.CompactTextString(m) }
func (*Velocity_Polar_Error) ProtoMessage()    {}
func (*Velocity_Polar_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{3, 0, 0}
}

func (m *Velocity_Polar_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Velocity_Polar_Error.Unmarshal(m, b)
}
func (m *Velocity_Polar_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Velocity_Polar_Error.Marshal(b, m, deterministic)
}
func (m *Velocity_Polar_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Velocity_Polar_Error.Merge(m, src)
}
func (m *Velocity_Polar_Error) XXX_Size() int {
	return xxx_messageInfo_Velocity_Polar_Error.Size(m)
}
func (m *Velocity_Polar_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Velocity_Polar_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Velocity_Polar_Error proto.InternalMessageInfo

func (m *Velocity_Polar_Error) GetHeading() *units.Degrees {
	if m != nil {
		return m.Heading
	}
	return nil
}

func (m *Velocity_Polar_Error) GetRate() *units.MetersPerSecond {
	if m != nil {
		return m.Rate
	}
	return nil
}

// Cartesian Velocity models a velocity as XYZ vectors in the NED (north-east-down) coordinate space.
// *To convert from ENU (east-north-up), set (X, Y, Z) to (N, E, negative-U) values respectively.
type Velocity_Cartesian struct {
	X                    *units.MetersPerSecond    `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    *units.MetersPerSecond    `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    *units.MetersPerSecond    `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
	Error                *Velocity_Cartesian_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Velocity_Cartesian) Reset()         { *m = Velocity_Cartesian{} }
func (m *Velocity_Cartesian) String() string { return proto.CompactTextString(m) }
func (*Velocity_Cartesian) ProtoMessage()    {}
func (*Velocity_Cartesian) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{3, 1}
}

func (m *Velocity_Cartesian) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Velocity_Cartesian.Unmarshal(m, b)
}
func (m *Velocity_Cartesian) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Velocity_Cartesian.Marshal(b, m, deterministic)
}
func (m *Velocity_Cartesian) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Velocity_Cartesian.Merge(m, src)
}
func (m *Velocity_Cartesian) XXX_Size() int {
	return xxx_messageInfo_Velocity_Cartesian.Size(m)
}
func (m *Velocity_Cartesian) XXX_DiscardUnknown() {
	xxx_messageInfo_Velocity_Cartesian.DiscardUnknown(m)
}

var xxx_messageInfo_Velocity_Cartesian proto.InternalMessageInfo

func (m *Velocity_Cartesian) GetX() *units.MetersPerSecond {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Velocity_Cartesian) GetY() *units.MetersPerSecond {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Velocity_Cartesian) GetZ() *units.MetersPerSecond {
	if m != nil {
		return m.Z
	}
	return nil
}

func (m *Velocity_Cartesian) GetError() *Velocity_Cartesian_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in the cartesian velocity measurement.
type Velocity_Cartesian_Error struct {
	X                    *units.MetersPerSecond `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    *units.MetersPerSecond `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    *units.MetersPerSecond `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Velocity_Cartesian_Error) Reset()         { *m = Velocity_Cartesian_Error{} }
func (m *Velocity_Cartesian_Error) String() string { return proto.CompactTextString(m) }
func (*Velocity_Cartesian_Error) ProtoMessage()    {}
func (*Velocity_Cartesian_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{3, 1, 0}
}

func (m *Velocity_Cartesian_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Velocity_Cartesian_Error.Unmarshal(m, b)
}
func (m *Velocity_Cartesian_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Velocity_Cartesian_Error.Marshal(b, m, deterministic)
}
func (m *Velocity_Cartesian_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Velocity_Cartesian_Error.Merge(m, src)
}
func (m *Velocity_Cartesian_Error) XXX_Size() int {
	return xxx_messageInfo_Velocity_Cartesian_Error.Size(m)
}
func (m *Velocity_Cartesian_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Velocity_Cartesian_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Velocity_Cartesian_Error proto.InternalMessageInfo

func (m *Velocity_Cartesian_Error) GetX() *units.MetersPerSecond {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Velocity_Cartesian_Error) GetY() *units.MetersPerSecond {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Velocity_Cartesian_Error) GetZ() *units.MetersPerSecond {
	if m != nil {
		return m.Z
	}
	return nil
}

// Orientation models an attitude or positional orientation measurement.
type Orientation struct {
	Yaw                  *units.Degrees     `protobuf:"bytes,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Pitch                *units.Degrees     `protobuf:"bytes,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll                 *units.Degrees     `protobuf:"bytes,3,opt,name=roll,proto3" json:"roll,omitempty"`
	Error                *Orientation_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Orientation) Reset()         { *m = Orientation{} }
func (m *Orientation) String() string { return proto.CompactTextString(m) }
func (*Orientation) ProtoMessage()    {}
func (*Orientation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{4}
}

func (m *Orientation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orientation.Unmarshal(m, b)
}
func (m *Orientation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orientation.Marshal(b, m, deterministic)
}
func (m *Orientation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orientation.Merge(m, src)
}
func (m *Orientation) XXX_Size() int {
	return xxx_messageInfo_Orientation.Size(m)
}
func (m *Orientation) XXX_DiscardUnknown() {
	xxx_messageInfo_Orientation.DiscardUnknown(m)
}

var xxx_messageInfo_Orientation proto.InternalMessageInfo

func (m *Orientation) GetYaw() *units.Degrees {
	if m != nil {
		return m.Yaw
	}
	return nil
}

func (m *Orientation) GetPitch() *units.Degrees {
	if m != nil {
		return m.Pitch
	}
	return nil
}

func (m *Orientation) GetRoll() *units.Degrees {
	if m != nil {
		return m.Roll
	}
	return nil
}

func (m *Orientation) GetError() *Orientation_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in the orientation measurement.
type Orientation_Error struct {
	Yaw                  *units.Degrees `protobuf:"bytes,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Pitch                *units.Degrees `protobuf:"bytes,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll                 *units.Degrees `protobuf:"bytes,3,opt,name=roll,proto3" json:"roll,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Orientation_Error) Reset()         { *m = Orientation_Error{} }
func (m *Orientation_Error) String() string { return proto.CompactTextString(m) }
func (*Orientation_Error) ProtoMessage()    {}
func (*Orientation_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{4, 0}
}

func (m *Orientation_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orientation_Error.Unmarshal(m, b)
}
func (m *Orientation_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orientation_Error.Marshal(b, m, deterministic)
}
func (m *Orientation_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orientation_Error.Merge(m, src)
}
func (m *Orientation_Error) XXX_Size() int {
	return xxx_messageInfo_Orientation_Error.Size(m)
}
func (m *Orientation_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Orientation_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Orientation_Error proto.InternalMessageInfo

func (m *Orientation_Error) GetYaw() *units.Degrees {
	if m != nil {
		return m.Yaw
	}
	return nil
}

func (m *Orientation_Error) GetPitch() *units.Degrees {
	if m != nil {
		return m.Pitch
	}
	return nil
}

func (m *Orientation_Error) GetRoll() *units.Degrees {
	if m != nil {
		return m.Roll
	}
	return nil
}

// Pressure models an atmospheric pressure measurement.
type Pressure struct {
	Units                *units.Pascal   `protobuf:"bytes,1,opt,name=units,proto3" json:"units,omitempty"`
	Error                *Pressure_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Pressure) Reset()         { *m = Pressure{} }
func (m *Pressure) String() string { return proto.CompactTextString(m) }
func (*Pressure) ProtoMessage()    {}
func (*Pressure) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{5}
}

func (m *Pressure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pressure.Unmarshal(m, b)
}
func (m *Pressure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pressure.Marshal(b, m, deterministic)
}
func (m *Pressure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pressure.Merge(m, src)
}
func (m *Pressure) XXX_Size() int {
	return xxx_messageInfo_Pressure.Size(m)
}
func (m *Pressure) XXX_DiscardUnknown() {
	xxx_messageInfo_Pressure.DiscardUnknown(m)
}

var xxx_messageInfo_Pressure proto.InternalMessageInfo

func (m *Pressure) GetUnits() *units.Pascal {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *Pressure) GetError() *Pressure_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in an atmospheric pressure measurement.
type Pressure_Error struct {
	Pressure             *units.Pascal `protobuf:"bytes,1,opt,name=pressure,proto3" json:"pressure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Pressure_Error) Reset()         { *m = Pressure_Error{} }
func (m *Pressure_Error) String() string { return proto.CompactTextString(m) }
func (*Pressure_Error) ProtoMessage()    {}
func (*Pressure_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{5, 0}
}

func (m *Pressure_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pressure_Error.Unmarshal(m, b)
}
func (m *Pressure_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pressure_Error.Marshal(b, m, deterministic)
}
func (m *Pressure_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pressure_Error.Merge(m, src)
}
func (m *Pressure_Error) XXX_Size() int {
	return xxx_messageInfo_Pressure_Error.Size(m)
}
func (m *Pressure_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Pressure_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Pressure_Error proto.InternalMessageInfo

func (m *Pressure_Error) GetPressure() *units.Pascal {
	if m != nil {
		return m.Pressure
	}
	return nil
}

// Temperature models an atmospheric temperature measurement.
type Temperature struct {
	Degrees              *units.Celsius     `protobuf:"bytes,1,opt,name=degrees,proto3" json:"degrees,omitempty"`
	Error                *Temperature_Error `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Temperature) Reset()         { *m = Temperature{} }
func (m *Temperature) String() string { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()    {}
func (*Temperature) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{6}
}

func (m *Temperature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature.Unmarshal(m, b)
}
func (m *Temperature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature.Marshal(b, m, deterministic)
}
func (m *Temperature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature.Merge(m, src)
}
func (m *Temperature) XXX_Size() int {
	return xxx_messageInfo_Temperature.Size(m)
}
func (m *Temperature) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature proto.InternalMessageInfo

func (m *Temperature) GetDegrees() *units.Celsius {
	if m != nil {
		return m.Degrees
	}
	return nil
}

func (m *Temperature) GetError() *Temperature_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in a temperature measurement.
type Temperature_Error struct {
	Degrees              *units.Celsius `protobuf:"bytes,1,opt,name=degrees,proto3" json:"degrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Temperature_Error) Reset()         { *m = Temperature_Error{} }
func (m *Temperature_Error) String() string { return proto.CompactTextString(m) }
func (*Temperature_Error) ProtoMessage()    {}
func (*Temperature_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{6, 0}
}

func (m *Temperature_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature_Error.Unmarshal(m, b)
}
func (m *Temperature_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature_Error.Marshal(b, m, deterministic)
}
func (m *Temperature_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature_Error.Merge(m, src)
}
func (m *Temperature_Error) XXX_Size() int {
	return xxx_messageInfo_Temperature_Error.Size(m)
}
func (m *Temperature_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature_Error proto.InternalMessageInfo

func (m *Temperature_Error) GetDegrees() *units.Celsius {
	if m != nil {
		return m.Degrees
	}
	return nil
}

// Wind models a wind measurement.
type Wind struct {
	Direction            *units.Degrees         `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	Speed                *units.MetersPerSecond `protobuf:"bytes,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Error                *Wind_Error            `protobuf:"bytes,1001,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Wind) Reset()         { *m = Wind{} }
func (m *Wind) String() string { return proto.CompactTextString(m) }
func (*Wind) ProtoMessage()    {}
func (*Wind) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{7}
}

func (m *Wind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wind.Unmarshal(m, b)
}
func (m *Wind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wind.Marshal(b, m, deterministic)
}
func (m *Wind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wind.Merge(m, src)
}
func (m *Wind) XXX_Size() int {
	return xxx_messageInfo_Wind.Size(m)
}
func (m *Wind) XXX_DiscardUnknown() {
	xxx_messageInfo_Wind.DiscardUnknown(m)
}

var xxx_messageInfo_Wind proto.InternalMessageInfo

func (m *Wind) GetDirection() *units.Degrees {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *Wind) GetSpeed() *units.MetersPerSecond {
	if m != nil {
		return m.Speed
	}
	return nil
}

func (m *Wind) GetError() *Wind_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error models the inherent error in a temperature measurement.
type Wind_Error struct {
	Direction            *units.Degrees         `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	Speed                *units.MetersPerSecond `protobuf:"bytes,2,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Wind_Error) Reset()         { *m = Wind_Error{} }
func (m *Wind_Error) String() string { return proto.CompactTextString(m) }
func (*Wind_Error) ProtoMessage()    {}
func (*Wind_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2eea6fd85e417681, []int{7, 0}
}

func (m *Wind_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wind_Error.Unmarshal(m, b)
}
func (m *Wind_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wind_Error.Marshal(b, m, deterministic)
}
func (m *Wind_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wind_Error.Merge(m, src)
}
func (m *Wind_Error) XXX_Size() int {
	return xxx_messageInfo_Wind_Error.Size(m)
}
func (m *Wind_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Wind_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Wind_Error proto.InternalMessageInfo

func (m *Wind_Error) GetDirection() *units.Degrees {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *Wind_Error) GetSpeed() *units.MetersPerSecond {
	if m != nil {
		return m.Speed
	}
	return nil
}

func init() {
	proto.RegisterEnum("measurements.Altitude_Reference", Altitude_Reference_name, Altitude_Reference_value)
	proto.RegisterType((*Position)(nil), "measurements.Position")
	proto.RegisterType((*Position_Absolute)(nil), "measurements.Position.Absolute")
	proto.RegisterType((*Position_Relative)(nil), "measurements.Position.Relative")
	proto.RegisterType((*Position_Relative_Error)(nil), "measurements.Position.Relative.Error")
	proto.RegisterType((*Coordinate2D)(nil), "measurements.Coordinate2D")
	proto.RegisterType((*Coordinate2D_Error)(nil), "measurements.Coordinate2D.Error")
	proto.RegisterType((*Altitude)(nil), "measurements.Altitude")
	proto.RegisterType((*Altitude_Error)(nil), "measurements.Altitude.Error")
	proto.RegisterType((*Velocity)(nil), "measurements.Velocity")
	proto.RegisterType((*Velocity_Polar)(nil), "measurements.Velocity.Polar")
	proto.RegisterType((*Velocity_Polar_Error)(nil), "measurements.Velocity.Polar.Error")
	proto.RegisterType((*Velocity_Cartesian)(nil), "measurements.Velocity.Cartesian")
	proto.RegisterType((*Velocity_Cartesian_Error)(nil), "measurements.Velocity.Cartesian.Error")
	proto.RegisterType((*Orientation)(nil), "measurements.Orientation")
	proto.RegisterType((*Orientation_Error)(nil), "measurements.Orientation.Error")
	proto.RegisterType((*Pressure)(nil), "measurements.Pressure")
	proto.RegisterType((*Pressure_Error)(nil), "measurements.Pressure.Error")
	proto.RegisterType((*Temperature)(nil), "measurements.Temperature")
	proto.RegisterType((*Temperature_Error)(nil), "measurements.Temperature.Error")
	proto.RegisterType((*Wind)(nil), "measurements.Wind")
	proto.RegisterType((*Wind_Error)(nil), "measurements.Wind.Error")
}

func init() { proto.RegisterFile("measurements/measurements.proto", fileDescriptor_2eea6fd85e417681) }

var fileDescriptor_2eea6fd85e417681 = []byte{
	// 1084 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xf6, 0x6e, 0xed, 0x64, 0xfd, 0x52, 0x07, 0x67, 0x24, 0xaa, 0xc8, 0xa2, 0x6a, 0x64, 0x5a,
	0x14, 0x2e, 0x36, 0x24, 0x45, 0x25, 0x84, 0x40, 0xfc, 0x2b, 0xa4, 0x22, 0x38, 0xd6, 0x24, 0x6d,
	0x11, 0x97, 0x6a, 0xb2, 0x9e, 0x38, 0x23, 0xad, 0x77, 0xad, 0xd9, 0x71, 0x89, 0xcd, 0x81, 0xc2,
	0x9f, 0xc1, 0x09, 0x71, 0xc8, 0x8d, 0x0b, 0x17, 0xae, 0x1c, 0x10, 0x42, 0xfc, 0x09, 0x1c, 0x10,
	0xe2, 0x86, 0xb8, 0xf4, 0xcc, 0x09, 0xcd, 0x7a, 0x67, 0xbd, 0x1e, 0xd6, 0x5e, 0x0a, 0xf4, 0x50,
	0x65, 0xe7, 0x7d, 0xdf, 0x9b, 0xef, 0x7d, 0xef, 0xed, 0xcc, 0x1a, 0x6e, 0xf5, 0x29, 0xf1, 0x87,
	0x9c, 0xf6, 0xa9, 0x2b, 0xfc, 0x6a, 0xfc, 0xa1, 0x32, 0xe0, 0x9e, 0xf0, 0xd0, 0xf5, 0xf8, 0x5a,
	0xa9, 0x48, 0x2f, 0x05, 0x75, 0x7d, 0xe6, 0xb9, 0x61, 0xbc, 0xb4, 0x36, 0x74, 0x99, 0xf0, 0xab,
	0xc1, 0xff, 0xe1, 0xd2, 0x8d, 0xc9, 0x92, 0x0e, 0x2d, 0x3f, 0xcb, 0x82, 0xd5, 0xf1, 0x7c, 0x26,
	0x98, 0xe7, 0xa2, 0x3d, 0xb0, 0xc8, 0x99, 0xef, 0x39, 0x43, 0x41, 0xd7, 0x8d, 0x0d, 0x63, 0x73,
	0x65, 0xeb, 0x56, 0x65, 0x66, 0x7b, 0x85, 0xac, 0xd4, 0x42, 0xd8, 0x61, 0x06, 0x47, 0x14, 0x49,
	0xe7, 0xd4, 0x21, 0x82, 0x3d, 0xa1, 0xeb, 0xe6, 0x42, 0x3a, 0x0e, 0x61, 0x92, 0xae, 0x28, 0xa5,
	0x31, 0x58, 0x2a, 0x2d, 0x7a, 0x0b, 0xc0, 0xf6, 0x3c, 0xde, 0x65, 0x2e, 0x89, 0xb4, 0x94, 0x66,
	0x93, 0x35, 0xa2, 0xf8, 0x56, 0x13, 0xc7, 0xd0, 0x68, 0x0b, 0x2c, 0xe2, 0x08, 0x26, 0x86, 0x5d,
	0x25, 0xe3, 0xc6, 0x2c, 0xb3, 0x16, 0x46, 0x71, 0x84, 0x2b, 0xfd, 0x62, 0x82, 0xa5, 0x44, 0xa1,
	0x3d, 0xc8, 0x73, 0x7a, 0x4e, 0x39, 0x75, 0xed, 0x7f, 0xea, 0x03, 0x9e, 0x32, 0xd0, 0xab, 0x60,
	0x75, 0x99, 0x2f, 0x88, 0x64, 0x4f, 0xf6, 0x2f, 0x54, 0x26, 0xad, 0xf8, 0x80, 0x0a, 0xca, 0x7d,
	0x1c, 0x85, 0xd1, 0x26, 0x2c, 0x93, 0x31, 0xeb, 0x0f, 0xc5, 0xc5, 0xfa, 0xb5, 0x00, 0xb9, 0x1a,
	0x22, 0x9b, 0xb4, 0xc7, 0x29, 0xf5, 0xb1, 0x0a, 0xa3, 0x3a, 0xe4, 0x28, 0xe7, 0x1e, 0x5f, 0xff,
	0x7d, 0x39, 0x00, 0xde, 0x49, 0x71, 0xb6, 0xd2, 0x92, 0xe8, 0x7a, 0xf6, 0xe9, 0xd5, 0x4d, 0x03,
	0x4f, 0xa8, 0xa5, 0x31, 0xe4, 0x82, 0x55, 0xf4, 0x66, 0x4c, 0xa1, 0x91, 0xa0, 0xb0, 0x5e, 0xf8,
	0xe6, 0xea, 0x66, 0x3e, 0x9f, 0x09, 0xff, 0xc5, 0x04, 0xdf, 0x9b, 0x0a, 0x36, 0x93, 0x04, 0xd7,
	0x0b, 0x5f, 0xcc, 0x30, 0x15, 0xba, 0x9e, 0x87, 0xe5, 0x2e, 0x15, 0x84, 0x39, 0x7e, 0xf9, 0x57,
	0x13, 0xae, 0xc7, 0x9b, 0x87, 0x0e, 0xc0, 0x92, 0xa2, 0x83, 0x86, 0x19, 0x89, 0x59, 0x4b, 0xd3,
	0xac, 0x4f, 0x1f, 0x7e, 0xf7, 0x55, 0xec, 0x61, 0x1f, 0x47, 0x5c, 0x74, 0x08, 0x79, 0xc7, 0x73,
	0x7b, 0xf1, 0xce, 0x2f, 0x4a, 0x74, 0x1e, 0x4f, 0x74, 0xbe, 0x8f, 0xa7, 0x64, 0xb4, 0xa7, 0xb9,
	0xbd, 0x31, 0x7f, 0xf4, 0x92, 0x8c, 0xfe, 0x54, 0x19, 0xbd, 0x93, 0x5a, 0x99, 0xe6, 0xd7, 0xb4,
	0x98, 0xdd, 0xf4, 0x62, 0x34, 0xee, 0x14, 0x5f, 0x7e, 0x66, 0x82, 0xa5, 0xa6, 0x1c, 0xdd, 0x81,
	0xa5, 0x0b, 0xca, 0x7a, 0x17, 0x22, 0xb1, 0xd7, 0x38, 0x0c, 0xa2, 0x77, 0xe2, 0x53, 0x2f, 0x37,
	0x5c, 0xd5, 0xcb, 0x56, 0x19, 0x2b, 0x58, 0xe1, 0xe2, 0x63, 0xbf, 0xa3, 0x79, 0xf6, 0xd2, 0x1c,
	0x72, 0x82, 0x5f, 0x7b, 0xca, 0xaf, 0xbb, 0x0b, 0xa5, 0xea, 0x63, 0x19, 0x62, 0xcb, 0x9f, 0x1b,
	0x90, 0x8f, 0x24, 0xa1, 0x17, 0x61, 0x0d, 0xb7, 0x0e, 0x5a, 0xb8, 0xd5, 0x6e, 0xb4, 0x1e, 0x3f,
	0x68, 0xbf, 0xdf, 0x3e, 0x7e, 0xd4, 0x2e, 0x66, 0x50, 0x01, 0xf2, 0xad, 0xa3, 0xa3, 0xfb, 0x9d,
	0x93, 0xe3, 0xfb, 0xcd, 0xa2, 0x81, 0xf2, 0x90, 0x7b, 0xaf, 0x25, 0xff, 0x34, 0xd1, 0x0b, 0xb0,
	0x7c, 0xf2, 0x00, 0x1f, 0xd4, 0x1a, 0xad, 0xe2, 0xb5, 0x92, 0x69, 0x19, 0xa8, 0x08, 0x56, 0xeb,
	0xc3, 0xd3, 0x16, 0x6e, 0xd7, 0x8e, 0x8a, 0xd9, 0x60, 0x65, 0x0d, 0x0a, 0x27, 0xa7, 0xb5, 0x76,
	0xb3, 0x86, 0x9b, 0x8f, 0xeb, 0x35, 0x7c, 0x5c, 0xcc, 0xa1, 0x55, 0x80, 0xa3, 0xe3, 0x46, 0xed,
	0x68, 0xf2, 0xbc, 0x54, 0xfe, 0x7e, 0x09, 0xac, 0x87, 0xd4, 0xf1, 0x6c, 0x26, 0x46, 0xe8, 0x2e,
	0xe4, 0x06, 0x9e, 0x43, 0x78, 0x58, 0x86, 0x66, 0x85, 0x82, 0x55, 0x3a, 0x12, 0x73, 0x98, 0xc1,
	0x13, 0x30, 0xda, 0x87, 0xbc, 0x4d, 0xb8, 0xa0, 0x3e, 0x23, 0x6e, 0xd8, 0xf2, 0x8d, 0x39, 0xcc,
	0x86, 0xc2, 0x1d, 0x66, 0xf0, 0x94, 0x54, 0xfa, 0xc1, 0x84, 0x5c, 0x90, 0x14, 0x35, 0x61, 0xf9,
	0x82, 0x92, 0x2e, 0x73, 0x7b, 0xe9, 0xaf, 0x54, 0x26, 0x93, 0x89, 0xbd, 0x09, 0x4f, 0xf6, 0xb1,
	0xa2, 0xa2, 0x1d, 0xc8, 0x72, 0x79, 0x00, 0xab, 0x63, 0x34, 0xde, 0x8d, 0x0e, 0xe5, 0x27, 0xd4,
	0xf6, 0xdc, 0x6e, 0xbd, 0xf0, 0xd3, 0x4c, 0x5b, 0x02, 0x0a, 0x7a, 0x57, 0x1b, 0x87, 0xf2, 0x22,
	0x0f, 0x92, 0x86, 0xe2, 0x13, 0x35, 0x14, 0xf7, 0xd2, 0x4a, 0xd1, 0xcf, 0x9c, 0xff, 0xae, 0xbe,
	0xf4, 0x87, 0x09, 0xf9, 0xc8, 0x63, 0x74, 0x1b, 0x8c, 0xcb, 0x70, 0xef, 0x39, 0x59, 0xb0, 0x71,
	0x29, 0x51, 0xa3, 0xc5, 0x7b, 0x61, 0x63, 0x24, 0x51, 0xe3, 0xf0, 0xb0, 0x9f, 0x8b, 0x1a, 0xa3,
	0x86, 0xe6, 0xde, 0x2b, 0x69, 0x73, 0x90, 0xe4, 0xe0, 0x95, 0xa1, 0x2c, 0xdc, 0x4e, 0x2d, 0x40,
	0xb7, 0xc1, 0xb8, 0x94, 0xa4, 0xd1, 0xf3, 0x79, 0x67, 0x8c, 0x24, 0x29, 0xa5, 0xbc, 0xbf, 0x91,
	0xc6, 0xf1, 0xcb, 0xe1, 0x67, 0x13, 0x56, 0x8e, 0x39, 0xa3, 0xae, 0x20, 0xc1, 0x27, 0xc9, 0x06,
	0x5c, 0x1b, 0x91, 0x8f, 0x93, 0x1b, 0x8f, 0x65, 0x08, 0xdd, 0x86, 0xdc, 0x80, 0x09, 0x7b, 0xce,
	0x85, 0x84, 0x27, 0x41, 0x54, 0x86, 0x2c, 0xf7, 0x1c, 0x67, 0xce, 0x35, 0x1b, 0xc4, 0xd0, 0xdb,
	0x9a, 0xe9, 0xda, 0xa5, 0x1f, 0x93, 0x95, 0xe4, 0xf6, 0x97, 0x91, 0xdb, 0xd5, 0x05, 0x9a, 0xf5,
	0x61, 0x0d, 0x4a, 0xd8, 0x5e, 0x58, 0x82, 0x4e, 0x09, 0x2b, 0x7a, 0x7d, 0x51, 0x45, 0x3a, 0x27,
	0x80, 0x96, 0xbf, 0x36, 0xc0, 0xea, 0x70, 0xea, 0xcb, 0x9a, 0xd0, 0xcb, 0x90, 0x0b, 0x28, 0xda,
	0x51, 0xdb, 0x21, 0xbe, 0x4d, 0x1c, 0x3c, 0x89, 0xa5, 0x1d, 0xea, 0x2a, 0x59, 0x92, 0x1f, 0xb5,
	0xd8, 0xd7, 0xc6, 0x20, 0xc4, 0x25, 0xee, 0x55, 0x2f, 0xfc, 0x36, 0x7b, 0x07, 0x2a, 0x74, 0xf9,
	0x5b, 0x03, 0x56, 0x4e, 0x69, 0x7f, 0x40, 0x39, 0x11, 0x52, 0xf2, 0xa6, 0x9c, 0x93, 0xa0, 0x3e,
	0xcd, 0xdc, 0x06, 0x75, 0x7c, 0x36, 0xf4, 0xb1, 0x0a, 0xa7, 0xb5, 0x32, 0x96, 0x34, 0x49, 0xfa,
	0x7e, 0xec, 0xe8, 0x59, 0xb8, 0x61, 0xbd, 0xf0, 0xe7, 0xec, 0xd1, 0x13, 0xa2, 0xcb, 0x3f, 0x9a,
	0x90, 0x7d, 0xc4, 0xdc, 0xae, 0xfc, 0x26, 0xe9, 0x32, 0x4e, 0x6d, 0x39, 0x35, 0xff, 0xe2, 0x24,
	0x9e, 0x92, 0xd1, 0x2e, 0xe4, 0xfc, 0x01, 0xa5, 0xdd, 0xe7, 0x7b, 0x25, 0x27, 0x1c, 0xf4, 0x86,
	0xe6, 0xc7, 0xfa, 0xac, 0x1f, 0x52, 0x6a, 0x92, 0x11, 0x9f, 0x45, 0x33, 0xbd, 0x9b, 0x5e, 0x87,
	0xfe, 0x39, 0xf2, 0xff, 0x48, 0xaf, 0x6f, 0x7d, 0xf4, 0x5a, 0x8f, 0x89, 0x8b, 0xe1, 0x59, 0xc5,
	0xf6, 0xfa, 0x55, 0xc2, 0x78, 0x9f, 0x0c, 0xaa, 0xcc, 0x15, 0x94, 0x9f, 0x13, 0x9b, 0xfa, 0x55,
	0x9f, 0xdb, 0xd5, 0x9e, 0x37, 0xf3, 0x33, 0xe9, 0x6c, 0x29, 0xf8, 0x71, 0xb3, 0xfd, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd6, 0x0b, 0x76, 0x8d, 0x4a, 0x0d, 0x00, 0x00,
}
