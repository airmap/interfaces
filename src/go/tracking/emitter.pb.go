// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking/emitter.proto

package tracking

import (
	fmt "fmt"
	_ "github.com/airmap/interfaces/src/go"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Emitter marks the emitter of the reported observation.
type Emitter int32

const (
	Emitter_UNKNOWN_EMITTER     Emitter = 0
	Emitter_LIGHT_AIRCRAFT      Emitter = 1
	Emitter_SMALL_AIRCRAFT      Emitter = 2
	Emitter_MEDIUM_AIRCRAFT     Emitter = 3
	Emitter_LARGE_AIRCRAFT      Emitter = 4
	Emitter_HEAVY_AIRCAFT       Emitter = 5
	Emitter_HIGHLY_MANUEVERABLE Emitter = 6
	// reserved 7 to 9;
	Emitter_ROTORCRAFT       Emitter = 10
	Emitter_GLIDER           Emitter = 11
	Emitter_LIGHTER_THAN_AIR Emitter = 12
	Emitter_UAV              Emitter = 13
	Emitter_SPACE            Emitter = 14
	Emitter_ULTRALIGHT       Emitter = 15
	Emitter_PARACHUTIST      Emitter = 16
	// reserved 17 to 19;
	Emitter_SFC_EMERGENCY_VEHICLE Emitter = 20
	Emitter_SFC_SERVICE_VEHICLE   Emitter = 21
	Emitter_SFC_OBSTACLE          Emitter = 22
	Emitter_SFC_OBSTACLE_CLUSTER  Emitter = 23
	Emitter_SFC_OBSTACLE_LINE     Emitter = 24
)

var Emitter_name = map[int32]string{
	0:  "UNKNOWN_EMITTER",
	1:  "LIGHT_AIRCRAFT",
	2:  "SMALL_AIRCRAFT",
	3:  "MEDIUM_AIRCRAFT",
	4:  "LARGE_AIRCRAFT",
	5:  "HEAVY_AIRCAFT",
	6:  "HIGHLY_MANUEVERABLE",
	10: "ROTORCRAFT",
	11: "GLIDER",
	12: "LIGHTER_THAN_AIR",
	13: "UAV",
	14: "SPACE",
	15: "ULTRALIGHT",
	16: "PARACHUTIST",
	20: "SFC_EMERGENCY_VEHICLE",
	21: "SFC_SERVICE_VEHICLE",
	22: "SFC_OBSTACLE",
	23: "SFC_OBSTACLE_CLUSTER",
	24: "SFC_OBSTACLE_LINE",
}

var Emitter_value = map[string]int32{
	"UNKNOWN_EMITTER":       0,
	"LIGHT_AIRCRAFT":        1,
	"SMALL_AIRCRAFT":        2,
	"MEDIUM_AIRCRAFT":       3,
	"LARGE_AIRCRAFT":        4,
	"HEAVY_AIRCAFT":         5,
	"HIGHLY_MANUEVERABLE":   6,
	"ROTORCRAFT":            10,
	"GLIDER":                11,
	"LIGHTER_THAN_AIR":      12,
	"UAV":                   13,
	"SPACE":                 14,
	"ULTRALIGHT":            15,
	"PARACHUTIST":           16,
	"SFC_EMERGENCY_VEHICLE": 20,
	"SFC_SERVICE_VEHICLE":   21,
	"SFC_OBSTACLE":          22,
	"SFC_OBSTACLE_CLUSTER":  23,
	"SFC_OBSTACLE_LINE":     24,
}

func (x Emitter) String() string {
	return proto.EnumName(Emitter_name, int32(x))
}

func (Emitter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f8da998b882aee, []int{0}
}

func init() {
	proto.RegisterEnum("tracking.Emitter", Emitter_name, Emitter_value)
}

func init() { proto.RegisterFile("tracking/emitter.proto", fileDescriptor_e0f8da998b882aee) }

var fileDescriptor_e0f8da998b882aee = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x6f, 0x8f, 0x93, 0x40,
	0x10, 0xc6, 0xf5, 0xce, 0xeb, 0xe9, 0xdc, 0x5d, 0xbb, 0x37, 0xfd, 0xab, 0x1f, 0xc1, 0x98, 0xf2,
	0xc2, 0x4f, 0xb0, 0xdd, 0x4e, 0x61, 0xe3, 0x02, 0xcd, 0xb2, 0x60, 0xea, 0x1b, 0x42, 0x09, 0x56,
	0x62, 0x0a, 0x0d, 0x60, 0xe2, 0x57, 0xf7, 0x9d, 0x59, 0x6a, 0xad, 0xbe, 0xfd, 0xfd, 0xe6, 0x99,
	0x4c, 0xe6, 0x81, 0x59, 0xd7, 0x64, 0xf9, 0xf7, 0xb2, 0x3a, 0x38, 0xc5, 0xb1, 0xec, 0xba, 0xa2,
	0x59, 0x9e, 0x9a, 0xba, 0xab, 0xf1, 0xf5, 0x85, 0xbf, 0x63, 0xc5, 0xcf, 0xae, 0xa8, 0xda, 0xb2,
	0xae, 0xda, 0xb3, 0x7b, 0xff, 0xeb, 0x06, 0xee, 0xe9, 0x3c, 0x8d, 0x63, 0x18, 0xc5, 0xc1, 0xa7,
	0x20, 0xfc, 0x1c, 0xa4, 0xe4, 0x4b, 0x63, 0x48, 0xb3, 0x17, 0x88, 0x30, 0x54, 0xd2, 0xf5, 0x4c,
	0xca, 0xa5, 0x16, 0x9a, 0x6f, 0x0c, 0x7b, 0x69, 0x59, 0xe4, 0x73, 0xa5, 0xae, 0xec, 0xc6, 0x86,
	0x7d, 0x5a, 0xcb, 0xd8, 0xbf, 0xc2, 0xdb, 0x3e, 0xcc, 0xb5, 0x4b, 0x57, 0xf6, 0x0a, 0x9f, 0xe1,
	0xc9, 0x23, 0x9e, 0xec, 0x7a, 0x66, 0xd1, 0x1d, 0xce, 0x61, 0xec, 0x49, 0xd7, 0x53, 0xbb, 0xd4,
	0xe7, 0x41, 0x4c, 0x09, 0x69, 0xbe, 0x52, 0xc4, 0x06, 0x38, 0x04, 0xd0, 0xa1, 0x09, 0xff, 0x64,
	0x01, 0x01, 0x06, 0xae, 0x92, 0x6b, 0xd2, 0xec, 0x01, 0x27, 0xc0, 0xfa, 0xc3, 0x48, 0xa7, 0xc6,
	0xe3, 0x81, 0x5d, 0xc7, 0x1e, 0xf1, 0x1e, 0x6e, 0x63, 0x9e, 0xb0, 0x27, 0x7c, 0x03, 0x77, 0xd1,
	0x96, 0x0b, 0x62, 0x43, 0xbb, 0x25, 0x56, 0x46, 0xf3, 0x7e, 0x9c, 0x8d, 0x70, 0x04, 0x0f, 0x5b,
	0xae, 0xb9, 0xf0, 0x62, 0x23, 0x23, 0xc3, 0x18, 0xbe, 0x85, 0x69, 0xb4, 0x11, 0x29, 0xf9, 0xa4,
	0x5d, 0x0a, 0xc4, 0x2e, 0x4d, 0xc8, 0x93, 0x42, 0x11, 0x9b, 0xd8, 0xd3, 0xac, 0x8a, 0x48, 0x27,
	0x52, 0xd0, 0x5f, 0x31, 0x45, 0x06, 0x8f, 0x56, 0x84, 0xab, 0xc8, 0x70, 0x4b, 0x66, 0xb8, 0x80,
	0xc9, 0xbf, 0x24, 0x15, 0x2a, 0x8e, 0xec, 0x0f, 0xe7, 0x38, 0x85, 0xe7, 0xff, 0x8c, 0x92, 0x01,
	0xb1, 0xc5, 0x6a, 0xf9, 0xe5, 0xc3, 0xa1, 0xec, 0xbe, 0xfd, 0xd8, 0x2f, 0xf3, 0xfa, 0xe8, 0x64,
	0x65, 0x73, 0xcc, 0x4e, 0x4e, 0x59, 0x75, 0x45, 0xf3, 0x35, 0xcb, 0x8b, 0xd6, 0x69, 0x9b, 0xdc,
	0x39, 0xd4, 0xce, 0xa5, 0xbd, 0xfd, 0xa0, 0xaf, 0xec, 0xe3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xde, 0xe9, 0x64, 0xd4, 0xe8, 0x01, 0x00, 0x00,
}
