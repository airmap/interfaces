// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking/track.proto

package tracking

import (
	fmt "fmt"
	_ "github.com/airmap/interfaces/src/go"
	measurements "github.com/airmap/interfaces/src/go/measurements"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Track models a single track observation.
type Track struct {
	Observed             *timestamp.Timestamp      `protobuf:"bytes,1,opt,name=observed,proto3" json:"observed,omitempty"`
	Position             *measurements.Position    `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Velocity             *measurements.Velocity    `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Orientation          *measurements.Orientation `protobuf:"bytes,4,opt,name=orientation,proto3" json:"orientation,omitempty"`
	Emitter              Emitter                   `protobuf:"varint,5,opt,name=emitter,proto3,enum=tracking.Emitter" json:"emitter,omitempty"`
	Sensor               *Sensor                   `protobuf:"bytes,6,opt,name=sensor,proto3" json:"sensor,omitempty"`
	Identities           []*Identity               `protobuf:"bytes,7,rep,name=identities,proto3" json:"identities,omitempty"`
	Flags                *Track_Flags              `protobuf:"bytes,8,opt,name=flags,proto3" json:"flags,omitempty"`
	Details              []*any.Any                `protobuf:"bytes,1024,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Track) Reset()         { *m = Track{} }
func (m *Track) String() string { return proto.CompactTextString(m) }
func (*Track) ProtoMessage()    {}
func (*Track) Descriptor() ([]byte, []int) {
	return fileDescriptor_560f96cb68e45a5e, []int{0}
}

func (m *Track) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Track.Unmarshal(m, b)
}
func (m *Track) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Track.Marshal(b, m, deterministic)
}
func (m *Track) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Track.Merge(m, src)
}
func (m *Track) XXX_Size() int {
	return xxx_messageInfo_Track.Size(m)
}
func (m *Track) XXX_DiscardUnknown() {
	xxx_messageInfo_Track.DiscardUnknown(m)
}

var xxx_messageInfo_Track proto.InternalMessageInfo

func (m *Track) GetObserved() *timestamp.Timestamp {
	if m != nil {
		return m.Observed
	}
	return nil
}

func (m *Track) GetPosition() *measurements.Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Track) GetVelocity() *measurements.Velocity {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *Track) GetOrientation() *measurements.Orientation {
	if m != nil {
		return m.Orientation
	}
	return nil
}

func (m *Track) GetEmitter() Emitter {
	if m != nil {
		return m.Emitter
	}
	return Emitter_EMITTER_UNKNOWN
}

func (m *Track) GetSensor() *Sensor {
	if m != nil {
		return m.Sensor
	}
	return nil
}

func (m *Track) GetIdentities() []*Identity {
	if m != nil {
		return m.Identities
	}
	return nil
}

func (m *Track) GetFlags() *Track_Flags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Track) GetDetails() []*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type Track_Flags struct {
	Projected            bool     `protobuf:"varint,1,opt,name=projected,proto3" json:"projected,omitempty"`
	Shadowed             bool     `protobuf:"varint,2,opt,name=shadowed,proto3" json:"shadowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Track_Flags) Reset()         { *m = Track_Flags{} }
func (m *Track_Flags) String() string { return proto.CompactTextString(m) }
func (*Track_Flags) ProtoMessage()    {}
func (*Track_Flags) Descriptor() ([]byte, []int) {
	return fileDescriptor_560f96cb68e45a5e, []int{0, 0}
}

func (m *Track_Flags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Track_Flags.Unmarshal(m, b)
}
func (m *Track_Flags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Track_Flags.Marshal(b, m, deterministic)
}
func (m *Track_Flags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Track_Flags.Merge(m, src)
}
func (m *Track_Flags) XXX_Size() int {
	return xxx_messageInfo_Track_Flags.Size(m)
}
func (m *Track_Flags) XXX_DiscardUnknown() {
	xxx_messageInfo_Track_Flags.DiscardUnknown(m)
}

var xxx_messageInfo_Track_Flags proto.InternalMessageInfo

func (m *Track_Flags) GetProjected() bool {
	if m != nil {
		return m.Projected
	}
	return false
}

func (m *Track_Flags) GetShadowed() bool {
	if m != nil {
		return m.Shadowed
	}
	return false
}

// Batch models a batch of tracks.
type Track_Batch struct {
	Tracks               []*Track `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Track_Batch) Reset()         { *m = Track_Batch{} }
func (m *Track_Batch) String() string { return proto.CompactTextString(m) }
func (*Track_Batch) ProtoMessage()    {}
func (*Track_Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_560f96cb68e45a5e, []int{0, 1}
}

func (m *Track_Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Track_Batch.Unmarshal(m, b)
}
func (m *Track_Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Track_Batch.Marshal(b, m, deterministic)
}
func (m *Track_Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Track_Batch.Merge(m, src)
}
func (m *Track_Batch) XXX_Size() int {
	return xxx_messageInfo_Track_Batch.Size(m)
}
func (m *Track_Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Track_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Track_Batch proto.InternalMessageInfo

func (m *Track_Batch) GetTracks() []*Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func init() {
	proto.RegisterType((*Track)(nil), "tracking.Track")
	proto.RegisterType((*Track_Flags)(nil), "tracking.Track.Flags")
	proto.RegisterType((*Track_Batch)(nil), "tracking.Track.Batch")
}

func init() { proto.RegisterFile("tracking/track.proto", fileDescriptor_560f96cb68e45a5e) }

var fileDescriptor_560f96cb68e45a5e = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x51, 0x6f, 0xd3, 0x30,
	0x14, 0x85, 0x15, 0xd6, 0xb4, 0xc1, 0x95, 0x60, 0x58, 0x63, 0x64, 0x11, 0x88, 0x8a, 0x17, 0x2a,
	0x81, 0x1c, 0x08, 0x02, 0xf1, 0xda, 0x4a, 0x20, 0xf1, 0x04, 0x32, 0x13, 0x0f, 0xbc, 0xb9, 0xc9,
	0x6d, 0x6a, 0x68, 0xec, 0xc8, 0xbe, 0x1d, 0xec, 0x6d, 0xbf, 0x86, 0x1f, 0xc5, 0xaf, 0x41, 0x73,
	0xec, 0xa4, 0x5b, 0x79, 0x8b, 0xef, 0xf9, 0x8e, 0x7d, 0x72, 0x2e, 0x39, 0x41, 0x23, 0xca, 0x9f,
	0x52, 0xd5, 0xb9, 0xfb, 0x60, 0xad, 0xd1, 0xa8, 0x69, 0x12, 0xa6, 0xd9, 0x59, 0xad, 0x75, 0xbd,
	0x85, 0xdc, 0xcd, 0x57, 0xbb, 0x75, 0x2e, 0xd4, 0x65, 0x07, 0x65, 0x4f, 0x6f, 0x4b, 0x28, 0x1b,
	0xb0, 0x28, 0x9a, 0xd6, 0x03, 0xc7, 0xf0, 0x1b, 0x41, 0x59, 0xa9, 0x95, 0x0d, 0x96, 0x06, 0x84,
	0xdd, 0x19, 0x68, 0x40, 0xa1, 0xcd, 0xf7, 0x0f, 0x1e, 0x38, 0xed, 0xe3, 0x40, 0x23, 0x11, 0xc1,
	0x1c, 0xcc, 0x2d, 0x28, 0xab, 0x4d, 0xe0, 0x1f, 0xf5, 0x73, 0x59, 0x81, 0x42, 0x89, 0x3e, 0xdc,
	0xb3, 0xbf, 0x23, 0x12, 0x9f, 0x5f, 0x6b, 0xf4, 0x1d, 0x49, 0xf4, 0xca, 0x82, 0xb9, 0x80, 0x2a,
	0x8d, 0x66, 0xd1, 0x7c, 0x5a, 0x64, 0xac, 0x4b, 0xce, 0x42, 0x72, 0x76, 0x1e, 0x92, 0xf3, 0x9e,
	0xa5, 0x05, 0x49, 0x5a, 0x6d, 0x25, 0x4a, 0xad, 0xd2, 0x3b, 0xce, 0x77, 0xca, 0x6e, 0x24, 0xfe,
	0xe2, 0x55, 0xde, 0x73, 0xf4, 0x3d, 0x49, 0x2e, 0x60, 0xab, 0x4b, 0x89, 0x97, 0xe9, 0xd1, 0xff,
	0x3c, 0xdf, 0xbc, 0xba, 0x1c, 0x5d, 0xfd, 0x79, 0x12, 0xf1, 0x9e, 0xa6, 0x0b, 0x32, 0xd5, 0x46,
	0x82, 0x42, 0xe1, 0x1e, 0x1c, 0x39, 0xf3, 0xd9, 0x4d, 0xf3, 0xe7, 0x01, 0xf0, 0xfe, 0x7d, 0x0f,
	0x7d, 0x4d, 0x26, 0xbe, 0xb4, 0x34, 0x9e, 0x45, 0xf3, 0x7b, 0xc5, 0x03, 0x16, 0xda, 0x61, 0x1f,
	0x3a, 0xc1, 0xdb, 0x02, 0x47, 0xe7, 0x64, 0xdc, 0xf5, 0x99, 0x8e, 0xdd, 0x83, 0xc7, 0x83, 0xe3,
	0xab, 0x9b, 0x73, 0xaf, 0xd3, 0x82, 0x10, 0xdf, 0xb0, 0x04, 0x9b, 0x4e, 0x66, 0x47, 0xf3, 0x69,
	0x41, 0x07, 0xfa, 0x93, 0x6f, 0x9f, 0xef, 0x51, 0xf4, 0x05, 0x89, 0xd7, 0x5b, 0x51, 0xdb, 0x34,
	0x71, 0x97, 0x3f, 0x1c, 0x70, 0xb7, 0x19, 0xf6, 0xf1, 0x5a, 0xe4, 0x1d, 0x43, 0xdf, 0x92, 0x49,
	0x05, 0x28, 0xe4, 0xd6, 0xa6, 0x57, 0x89, 0xbb, 0xfe, 0xe4, 0x60, 0x4d, 0x0b, 0x15, 0x8a, 0x0b,
	0x6c, 0xb6, 0x20, 0xb1, 0xbb, 0x86, 0x3e, 0x26, 0x77, 0x5b, 0xa3, 0x7f, 0x40, 0x89, 0x7e, 0xcf,
	0x09, 0x1f, 0x06, 0x34, 0x23, 0x89, 0xdd, 0x88, 0x4a, 0xff, 0x82, 0xca, 0x2d, 0x33, 0xe1, 0xfd,
	0x39, 0x7b, 0x45, 0xe2, 0xa5, 0xc0, 0x72, 0x43, 0x9f, 0x93, 0xb1, 0x4b, 0x68, 0xd3, 0xc8, 0x05,
	0xb8, 0x7f, 0x2b, 0x30, 0xf7, 0xf2, 0x92, 0x7d, 0x7f, 0x59, 0x4b, 0xdc, 0xec, 0x56, 0xac, 0xd4,
	0x4d, 0x2e, 0xa4, 0x69, 0x44, 0x9b, 0x4b, 0x85, 0x60, 0xd6, 0xa2, 0x04, 0x9b, 0x5b, 0x53, 0xe6,
	0xb5, 0xce, 0x83, 0x7b, 0x35, 0x76, 0x7f, 0xf0, 0xe6, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbc,
	0xab, 0xb0, 0x10, 0x6d, 0x03, 0x00, 0x00,
}
