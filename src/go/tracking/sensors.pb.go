// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking/sensors.proto

package tracking

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Sensor models the method used to observe a track.
type Sensor struct {
	// details provides specific information for a given sensor.
	//
	// Types that are valid to be assigned to Details:
	//	*Sensor_Fused_
	//	*Sensor_PrimaryRadar_
	//	*Sensor_SecondaryRadar_
	//	*Sensor_Adsb_
	//	*Sensor_Gnss_
	//	*Sensor_RadioFrequency_
	//	*Sensor_ElectroOptical_
	Details              isSensor_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Sensor) Reset()         { *m = Sensor{} }
func (m *Sensor) String() string { return proto.CompactTextString(m) }
func (*Sensor) ProtoMessage()    {}
func (*Sensor) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0}
}

func (m *Sensor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor.Unmarshal(m, b)
}
func (m *Sensor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor.Marshal(b, m, deterministic)
}
func (m *Sensor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor.Merge(m, src)
}
func (m *Sensor) XXX_Size() int {
	return xxx_messageInfo_Sensor.Size(m)
}
func (m *Sensor) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor proto.InternalMessageInfo

type isSensor_Details interface {
	isSensor_Details()
}

type Sensor_Fused_ struct {
	Fused *Sensor_Fused `protobuf:"bytes,1,opt,name=fused,proto3,oneof"`
}

type Sensor_PrimaryRadar_ struct {
	PrimaryRadar *Sensor_PrimaryRadar `protobuf:"bytes,2,opt,name=primary_radar,json=primaryRadar,proto3,oneof"`
}

type Sensor_SecondaryRadar_ struct {
	SecondaryRadar *Sensor_SecondaryRadar `protobuf:"bytes,3,opt,name=secondary_radar,json=secondaryRadar,proto3,oneof"`
}

type Sensor_Adsb_ struct {
	Adsb *Sensor_Adsb `protobuf:"bytes,4,opt,name=adsb,proto3,oneof"`
}

type Sensor_Gnss_ struct {
	Gnss *Sensor_Gnss `protobuf:"bytes,5,opt,name=gnss,proto3,oneof"`
}

type Sensor_RadioFrequency_ struct {
	RadioFrequency *Sensor_RadioFrequency `protobuf:"bytes,6,opt,name=radio_frequency,json=radioFrequency,proto3,oneof"`
}

type Sensor_ElectroOptical_ struct {
	ElectroOptical *Sensor_ElectroOptical `protobuf:"bytes,7,opt,name=electro_optical,json=electroOptical,proto3,oneof"`
}

func (*Sensor_Fused_) isSensor_Details() {}

func (*Sensor_PrimaryRadar_) isSensor_Details() {}

func (*Sensor_SecondaryRadar_) isSensor_Details() {}

func (*Sensor_Adsb_) isSensor_Details() {}

func (*Sensor_Gnss_) isSensor_Details() {}

func (*Sensor_RadioFrequency_) isSensor_Details() {}

func (*Sensor_ElectroOptical_) isSensor_Details() {}

func (m *Sensor) GetDetails() isSensor_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Sensor) GetFused() *Sensor_Fused {
	if x, ok := m.GetDetails().(*Sensor_Fused_); ok {
		return x.Fused
	}
	return nil
}

func (m *Sensor) GetPrimaryRadar() *Sensor_PrimaryRadar {
	if x, ok := m.GetDetails().(*Sensor_PrimaryRadar_); ok {
		return x.PrimaryRadar
	}
	return nil
}

func (m *Sensor) GetSecondaryRadar() *Sensor_SecondaryRadar {
	if x, ok := m.GetDetails().(*Sensor_SecondaryRadar_); ok {
		return x.SecondaryRadar
	}
	return nil
}

func (m *Sensor) GetAdsb() *Sensor_Adsb {
	if x, ok := m.GetDetails().(*Sensor_Adsb_); ok {
		return x.Adsb
	}
	return nil
}

func (m *Sensor) GetGnss() *Sensor_Gnss {
	if x, ok := m.GetDetails().(*Sensor_Gnss_); ok {
		return x.Gnss
	}
	return nil
}

func (m *Sensor) GetRadioFrequency() *Sensor_RadioFrequency {
	if x, ok := m.GetDetails().(*Sensor_RadioFrequency_); ok {
		return x.RadioFrequency
	}
	return nil
}

func (m *Sensor) GetElectroOptical() *Sensor_ElectroOptical {
	if x, ok := m.GetDetails().(*Sensor_ElectroOptical_); ok {
		return x.ElectroOptical
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Sensor) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Sensor_Fused_)(nil),
		(*Sensor_PrimaryRadar_)(nil),
		(*Sensor_SecondaryRadar_)(nil),
		(*Sensor_Adsb_)(nil),
		(*Sensor_Gnss_)(nil),
		(*Sensor_RadioFrequency_)(nil),
		(*Sensor_ElectroOptical_)(nil),
	}
}

// Fused models multiple fused data sensors.
type Sensor_Fused struct {
	Sensors              []*Sensor `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Sensor_Fused) Reset()         { *m = Sensor_Fused{} }
func (m *Sensor_Fused) String() string { return proto.CompactTextString(m) }
func (*Sensor_Fused) ProtoMessage()    {}
func (*Sensor_Fused) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 0}
}

func (m *Sensor_Fused) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_Fused.Unmarshal(m, b)
}
func (m *Sensor_Fused) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_Fused.Marshal(b, m, deterministic)
}
func (m *Sensor_Fused) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_Fused.Merge(m, src)
}
func (m *Sensor_Fused) XXX_Size() int {
	return xxx_messageInfo_Sensor_Fused.Size(m)
}
func (m *Sensor_Fused) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_Fused.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_Fused proto.InternalMessageInfo

func (m *Sensor_Fused) GetSensors() []*Sensor {
	if m != nil {
		return m.Sensors
	}
	return nil
}

// PrimaryRadar models a primary radar sensor.
type Sensor_PrimaryRadar struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_PrimaryRadar) Reset()         { *m = Sensor_PrimaryRadar{} }
func (m *Sensor_PrimaryRadar) String() string { return proto.CompactTextString(m) }
func (*Sensor_PrimaryRadar) ProtoMessage()    {}
func (*Sensor_PrimaryRadar) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 1}
}

func (m *Sensor_PrimaryRadar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_PrimaryRadar.Unmarshal(m, b)
}
func (m *Sensor_PrimaryRadar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_PrimaryRadar.Marshal(b, m, deterministic)
}
func (m *Sensor_PrimaryRadar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_PrimaryRadar.Merge(m, src)
}
func (m *Sensor_PrimaryRadar) XXX_Size() int {
	return xxx_messageInfo_Sensor_PrimaryRadar.Size(m)
}
func (m *Sensor_PrimaryRadar) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_PrimaryRadar.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_PrimaryRadar proto.InternalMessageInfo

// SecondaryRadar models a secondary radar sensor.
type Sensor_SecondaryRadar struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_SecondaryRadar) Reset()         { *m = Sensor_SecondaryRadar{} }
func (m *Sensor_SecondaryRadar) String() string { return proto.CompactTextString(m) }
func (*Sensor_SecondaryRadar) ProtoMessage()    {}
func (*Sensor_SecondaryRadar) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 2}
}

func (m *Sensor_SecondaryRadar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_SecondaryRadar.Unmarshal(m, b)
}
func (m *Sensor_SecondaryRadar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_SecondaryRadar.Marshal(b, m, deterministic)
}
func (m *Sensor_SecondaryRadar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_SecondaryRadar.Merge(m, src)
}
func (m *Sensor_SecondaryRadar) XXX_Size() int {
	return xxx_messageInfo_Sensor_SecondaryRadar.Size(m)
}
func (m *Sensor_SecondaryRadar) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_SecondaryRadar.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_SecondaryRadar proto.InternalMessageInfo

// Adsb models an ADS-B sensor.
type Sensor_Adsb struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_Adsb) Reset()         { *m = Sensor_Adsb{} }
func (m *Sensor_Adsb) String() string { return proto.CompactTextString(m) }
func (*Sensor_Adsb) ProtoMessage()    {}
func (*Sensor_Adsb) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 3}
}

func (m *Sensor_Adsb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_Adsb.Unmarshal(m, b)
}
func (m *Sensor_Adsb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_Adsb.Marshal(b, m, deterministic)
}
func (m *Sensor_Adsb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_Adsb.Merge(m, src)
}
func (m *Sensor_Adsb) XXX_Size() int {
	return xxx_messageInfo_Sensor_Adsb.Size(m)
}
func (m *Sensor_Adsb) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_Adsb.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_Adsb proto.InternalMessageInfo

// RadioFrequency models a Radio Frequency (RF) sensor.
type Sensor_RadioFrequency struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_RadioFrequency) Reset()         { *m = Sensor_RadioFrequency{} }
func (m *Sensor_RadioFrequency) String() string { return proto.CompactTextString(m) }
func (*Sensor_RadioFrequency) ProtoMessage()    {}
func (*Sensor_RadioFrequency) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 4}
}

func (m *Sensor_RadioFrequency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_RadioFrequency.Unmarshal(m, b)
}
func (m *Sensor_RadioFrequency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_RadioFrequency.Marshal(b, m, deterministic)
}
func (m *Sensor_RadioFrequency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_RadioFrequency.Merge(m, src)
}
func (m *Sensor_RadioFrequency) XXX_Size() int {
	return xxx_messageInfo_Sensor_RadioFrequency.Size(m)
}
func (m *Sensor_RadioFrequency) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_RadioFrequency.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_RadioFrequency proto.InternalMessageInfo

// Gnns a satellite-based position sensor.
type Sensor_Gnss struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_Gnss) Reset()         { *m = Sensor_Gnss{} }
func (m *Sensor_Gnss) String() string { return proto.CompactTextString(m) }
func (*Sensor_Gnss) ProtoMessage()    {}
func (*Sensor_Gnss) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 5}
}

func (m *Sensor_Gnss) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_Gnss.Unmarshal(m, b)
}
func (m *Sensor_Gnss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_Gnss.Marshal(b, m, deterministic)
}
func (m *Sensor_Gnss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_Gnss.Merge(m, src)
}
func (m *Sensor_Gnss) XXX_Size() int {
	return xxx_messageInfo_Sensor_Gnss.Size(m)
}
func (m *Sensor_Gnss) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_Gnss.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_Gnss proto.InternalMessageInfo

// ElectroOptical models an Electro-Optical sensor.
type Sensor_ElectroOptical struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sensor_ElectroOptical) Reset()         { *m = Sensor_ElectroOptical{} }
func (m *Sensor_ElectroOptical) String() string { return proto.CompactTextString(m) }
func (*Sensor_ElectroOptical) ProtoMessage()    {}
func (*Sensor_ElectroOptical) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa7fee78f2313b43, []int{0, 6}
}

func (m *Sensor_ElectroOptical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor_ElectroOptical.Unmarshal(m, b)
}
func (m *Sensor_ElectroOptical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor_ElectroOptical.Marshal(b, m, deterministic)
}
func (m *Sensor_ElectroOptical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor_ElectroOptical.Merge(m, src)
}
func (m *Sensor_ElectroOptical) XXX_Size() int {
	return xxx_messageInfo_Sensor_ElectroOptical.Size(m)
}
func (m *Sensor_ElectroOptical) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor_ElectroOptical.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor_ElectroOptical proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Sensor)(nil), "tracking.Sensor")
	proto.RegisterType((*Sensor_Fused)(nil), "tracking.Sensor.Fused")
	proto.RegisterType((*Sensor_PrimaryRadar)(nil), "tracking.Sensor.PrimaryRadar")
	proto.RegisterType((*Sensor_SecondaryRadar)(nil), "tracking.Sensor.SecondaryRadar")
	proto.RegisterType((*Sensor_Adsb)(nil), "tracking.Sensor.Adsb")
	proto.RegisterType((*Sensor_RadioFrequency)(nil), "tracking.Sensor.RadioFrequency")
	proto.RegisterType((*Sensor_Gnss)(nil), "tracking.Sensor.Gnss")
	proto.RegisterType((*Sensor_ElectroOptical)(nil), "tracking.Sensor.ElectroOptical")
}

func init() { proto.RegisterFile("tracking/sensors.proto", fileDescriptor_fa7fee78f2313b43) }

var fileDescriptor_fa7fee78f2313b43 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4e, 0xea, 0x40,
	0x14, 0x86, 0xe1, 0x52, 0xca, 0xbd, 0x03, 0x17, 0x49, 0x13, 0x49, 0xd3, 0xc4, 0x48, 0x5c, 0x11,
	0x35, 0x6d, 0x02, 0x4f, 0x20, 0x51, 0x24, 0x6e, 0x34, 0x65, 0xe7, 0x86, 0x4c, 0xa7, 0x43, 0x9d,
	0x08, 0x9d, 0x7a, 0x4e, 0x59, 0xf0, 0x9a, 0x3e, 0x91, 0x39, 0x53, 0x27, 0x52, 0x09, 0x4b, 0xce,
	0xff, 0xcd, 0x97, 0x9f, 0x73, 0xca, 0x86, 0x25, 0x70, 0xf1, 0xae, 0xf2, 0x2c, 0x42, 0x99, 0xa3,
	0x06, 0x0c, 0x0b, 0xd0, 0xa5, 0xf6, 0xfe, 0xda, 0xf9, 0xd5, 0xa7, 0xc3, 0xdc, 0xa5, 0xc9, 0xbc,
	0x90, 0xb5, 0xd7, 0x3b, 0x94, 0xa9, 0xdf, 0x1c, 0x35, 0xc7, 0xdd, 0xc9, 0x30, 0xb4, 0x50, 0x58,
	0x01, 0xe1, 0x9c, 0xd2, 0x45, 0x23, 0xae, 0x30, 0xef, 0x9e, 0xfd, 0x2f, 0x40, 0x6d, 0x39, 0xec,
	0x57, 0xc0, 0x53, 0x0e, 0xfe, 0x1f, 0xf3, 0xee, 0xe2, 0xe8, 0xdd, 0x4b, 0x45, 0xc5, 0x04, 0x2d,
	0x1a, 0x71, 0xaf, 0x38, 0xf8, 0xed, 0x3d, 0xb1, 0x33, 0x94, 0x42, 0xe7, 0xe9, 0x8f, 0xa7, 0x65,
	0x3c, 0x97, 0x47, 0x9e, 0xa5, 0xe5, 0xac, 0xa9, 0x8f, 0xb5, 0x89, 0x77, 0xc3, 0x1c, 0x9e, 0x62,
	0xe2, 0x3b, 0x46, 0x70, 0x7e, 0x24, 0xb8, 0x4b, 0x31, 0x59, 0x34, 0x62, 0x03, 0x11, 0x9c, 0xe5,
	0x88, 0x7e, 0xfb, 0x04, 0xfc, 0x98, 0x23, 0x12, 0x4c, 0x10, 0xb5, 0x04, 0x9e, 0x2a, 0xbd, 0x5a,
	0x83, 0xfc, 0xd8, 0xc9, 0x5c, 0xec, 0x7d, 0xf7, 0x44, 0xcb, 0x98, 0xb8, 0xb9, 0xc5, 0xa8, 0x25,
	0xd4, 0x26, 0xe4, 0x92, 0x1b, 0x29, 0x4a, 0xd0, 0x2b, 0x5d, 0x94, 0x4a, 0xf0, 0x8d, 0xdf, 0x39,
	0xe1, 0x7a, 0xa8, 0xb8, 0xe7, 0x0a, 0x23, 0x97, 0xac, 0x4d, 0x82, 0x29, 0x6b, 0x9b, 0xab, 0x78,
	0xd7, 0xac, 0xf3, 0x7d, 0x62, 0xbf, 0x39, 0x6a, 0x8d, 0xbb, 0x93, 0xc1, 0x6f, 0x59, 0x6c, 0x81,
	0xa0, 0xcf, 0x7a, 0x87, 0x27, 0x09, 0x06, 0xac, 0x5f, 0x5f, 0x6d, 0xe0, 0x32, 0x87, 0x76, 0x45,
	0x49, 0xfd, 0xef, 0x50, 0x42, 0x8b, 0xa1, 0xa4, 0x5e, 0x6e, 0xf6, 0x8f, 0x75, 0x52, 0x59, 0x72,
	0xb5, 0xc1, 0x59, 0xf8, 0x7a, 0x9b, 0xa9, 0xf2, 0x6d, 0x97, 0x84, 0x42, 0x6f, 0x23, 0xae, 0x60,
	0xcb, 0x8b, 0x48, 0xe5, 0xa5, 0x84, 0x35, 0x17, 0x12, 0x23, 0x04, 0x11, 0x65, 0x3a, 0xb2, 0x05,
	0x13, 0xd7, 0x7c, 0x95, 0xd3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x9a, 0x65, 0x0f, 0xaf,
	0x02, 0x00, 0x00,
}
