// Copyright 2018-2020 AirMap, Inc.  All rights reserved.

syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "extensions.proto";
import "measurements/measurements.proto";
import "tracking/emitter.proto";
import "tracking/sensors.proto";
import "tracking/identity.proto";

package tracking;

option go_package = "github.com/airmap/interfaces/src/go/tracking";

// Track models a single track observation.
message Track {
  google.protobuf.Timestamp observed    = 1;  // The time the track was observed.
  measurements.Position position        = 2;  // Position of the vehicle.
  measurements.Velocity velocity        = 3 [(grpc.nullable) = true];  // Velocity of the vehicle.
  measurements.Orientation orientation  = 4 [(grpc.nullable) = true];  // Orientation of the vehicle.
  Emitter emitter                       = 5 [(grpc.nullable) = true];  // Emitter of the track.
  Sensor sensor                         = 6;  // Describes the sensor from which the track originated.
  repeated Identity identities          = 7;  // All known identities for the track.
  Flags flags                           = 8;  // Status flags for the track.

  repeated google.protobuf.Any details  = 1024 [(grpc.nullable) = true];  // Vendor-specific details.

  message Flags {
    bool projected  = 1;  // This track has been synthesized via projection.
    bool shadowed   = 2;  // A more recent observation exists from another provider.
  }

  // Batch models a batch of tracks.
  message Batch {
    repeated Track tracks  = 1;  // A batch of tracks.
  }
}
