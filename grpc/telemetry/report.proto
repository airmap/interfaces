// Copyright 2018-2019 AirMap, Inc.  All rights reserved.

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "extensions.proto";
import "measurements/measurements.proto";
import "tracking/identity.proto";

package telemetry;

option go_package = "github.com/airmap/interfaces/src/go/telemetry";

// Report models a measurement at a given point in time.
message Report {
  google.protobuf.Timestamp observed    = 1;  // The timestamp of the report.
  repeated tracking.Identity identities = 2;
  // details is a discriminated union of all measurement types.
  oneof details {
    Spatial spatial          = 3;
    Atmospheric atmospheric  = 4;
    System system            = 5;
  }

  // Spatial bundles geospatial measurements.
  message Spatial {
    measurements.Position position         = 1;  // A positional measurement.
    measurements.Velocity velocity         = 2  [(grpc.nullable) = true];  // A velocity measurement.
    measurements.Orientation orientation   = 3  [(grpc.nullable) = true];  // An orientation/attitude measurement.
    measurements.Acceleration acceleration = 4  [(grpc.nullable) = true];  // An acceloration measurement.
  }

  // Atmospheric bundles atmospheric measurements at a given position.
  message Atmospheric {
    measurements.Position position        = 1;  // The position for the atmospheric measurement.
    measurements.Pressure pressure        = 2;  // An atmospheric pressure measurement.
    measurements.Temperature temperature  = 3;  // A temperature measurement.
    measurements.Wind wind                = 4;  // A wind measurement.
  }

  message System {
    google.protobuf.Duration endurance = 1;  // The endurance remaining of the battery level.
    repeated Subsystem subsystems      = 2;  // A collection of system performances. 
    
    message Subsystem {
      oneof details {
        Battery battery = 1; 
      }
    }
  
    message Battery {
      string id                            = 1;
      double voltage                       = 2;
      measurements.Temperature temperature = 3;
      double capacity                      = 4;
      double charge                        = 5;
    }
  }
}