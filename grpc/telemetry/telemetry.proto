// Copyright 2018-2020 AirMap, Inc.  All rights reserved.

syntax = "proto3";

import "system/status.proto";
import "system/ack.proto";
import "telemetry/report.proto";

package telemetry;

option go_package = "github.com/airmap/interfaces/src/go/telemetry";

// Collector exposes services that enable the reporting of telematic data.
service Collector {
  // ConnectProvider connects a stream of updates from a  provider to a collector
  rpc ConnectProvider(stream Update.FromProvider) returns (stream Update.ToProvider);
}

// Update wraps types used in the exchange of telemetry updates with a collector.
message Update {
  // FromProvider wraps messages being sent from a provider to a collector.
  message FromProvider {
    oneof details {
      system.Status status  = 1;  // Collector operational status.
      Report report         = 2;  // A report from a provider
    }
  }
  // ToProvider wraps messages being sent from a collector back to a provider.
  message ToProvider {
    oneof details {
      system.Status status  = 1;  // Collector operational status.
      system.Ack ack        = 2;  // Acknowledgement of a received update.
      system.Nack nack      = 3;  // A negative acknowledgement of a received update.
    }
  }
}
