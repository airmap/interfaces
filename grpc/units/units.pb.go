// Code generated by protoc-gen-go. DO NOT EDIT.
// source: units/units.proto

package units

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Degrees models an angular quantity in degrees [°].
type Degrees struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Degrees) Reset()         { *m = Degrees{} }
func (m *Degrees) String() string { return proto.CompactTextString(m) }
func (*Degrees) ProtoMessage()    {}
func (*Degrees) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{0}
}

func (m *Degrees) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Degrees.Unmarshal(m, b)
}
func (m *Degrees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Degrees.Marshal(b, m, deterministic)
}
func (m *Degrees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Degrees.Merge(m, src)
}
func (m *Degrees) XXX_Size() int {
	return xxx_messageInfo_Degrees.Size(m)
}
func (m *Degrees) XXX_DiscardUnknown() {
	xxx_messageInfo_Degrees.DiscardUnknown(m)
}

var xxx_messageInfo_Degrees proto.InternalMessageInfo

func (m *Degrees) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Celsius models a quantity in degrees Celsius [°C].
type Celsius struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Celsius) Reset()         { *m = Celsius{} }
func (m *Celsius) String() string { return proto.CompactTextString(m) }
func (*Celsius) ProtoMessage()    {}
func (*Celsius) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{1}
}

func (m *Celsius) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Celsius.Unmarshal(m, b)
}
func (m *Celsius) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Celsius.Marshal(b, m, deterministic)
}
func (m *Celsius) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Celsius.Merge(m, src)
}
func (m *Celsius) XXX_Size() int {
	return xxx_messageInfo_Celsius.Size(m)
}
func (m *Celsius) XXX_DiscardUnknown() {
	xxx_messageInfo_Celsius.DiscardUnknown(m)
}

var xxx_messageInfo_Celsius proto.InternalMessageInfo

func (m *Celsius) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Meters models a quantity in meters.
type Meters struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meters) Reset()         { *m = Meters{} }
func (m *Meters) String() string { return proto.CompactTextString(m) }
func (*Meters) ProtoMessage()    {}
func (*Meters) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{2}
}

func (m *Meters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meters.Unmarshal(m, b)
}
func (m *Meters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meters.Marshal(b, m, deterministic)
}
func (m *Meters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meters.Merge(m, src)
}
func (m *Meters) XXX_Size() int {
	return xxx_messageInfo_Meters.Size(m)
}
func (m *Meters) XXX_DiscardUnknown() {
	xxx_messageInfo_Meters.DiscardUnknown(m)
}

var xxx_messageInfo_Meters proto.InternalMessageInfo

func (m *Meters) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Foot models a quantity in feet.
type Foot struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foot) Reset()         { *m = Foot{} }
func (m *Foot) String() string { return proto.CompactTextString(m) }
func (*Foot) ProtoMessage()    {}
func (*Foot) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{3}
}

func (m *Foot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foot.Unmarshal(m, b)
}
func (m *Foot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foot.Marshal(b, m, deterministic)
}
func (m *Foot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foot.Merge(m, src)
}
func (m *Foot) XXX_Size() int {
	return xxx_messageInfo_Foot.Size(m)
}
func (m *Foot) XXX_DiscardUnknown() {
	xxx_messageInfo_Foot.DiscardUnknown(m)
}

var xxx_messageInfo_Foot proto.InternalMessageInfo

func (m *Foot) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// MetersPerSecond models a quantity in meters per second [m/s].
type MetersPerSecond struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetersPerSecond) Reset()         { *m = MetersPerSecond{} }
func (m *MetersPerSecond) String() string { return proto.CompactTextString(m) }
func (*MetersPerSecond) ProtoMessage()    {}
func (*MetersPerSecond) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{4}
}

func (m *MetersPerSecond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetersPerSecond.Unmarshal(m, b)
}
func (m *MetersPerSecond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetersPerSecond.Marshal(b, m, deterministic)
}
func (m *MetersPerSecond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetersPerSecond.Merge(m, src)
}
func (m *MetersPerSecond) XXX_Size() int {
	return xxx_messageInfo_MetersPerSecond.Size(m)
}
func (m *MetersPerSecond) XXX_DiscardUnknown() {
	xxx_messageInfo_MetersPerSecond.DiscardUnknown(m)
}

var xxx_messageInfo_MetersPerSecond proto.InternalMessageInfo

func (m *MetersPerSecond) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Pascal models a quantity in Pascals [Pa].
type Pascal struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pascal) Reset()         { *m = Pascal{} }
func (m *Pascal) String() string { return proto.CompactTextString(m) }
func (*Pascal) ProtoMessage()    {}
func (*Pascal) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{5}
}

func (m *Pascal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pascal.Unmarshal(m, b)
}
func (m *Pascal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pascal.Marshal(b, m, deterministic)
}
func (m *Pascal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pascal.Merge(m, src)
}
func (m *Pascal) XXX_Size() int {
	return xxx_messageInfo_Pascal.Size(m)
}
func (m *Pascal) XXX_DiscardUnknown() {
	xxx_messageInfo_Pascal.DiscardUnknown(m)
}

var xxx_messageInfo_Pascal proto.InternalMessageInfo

func (m *Pascal) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Percent models a quantity as a percentage [%].
type Percent struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Percent) Reset()         { *m = Percent{} }
func (m *Percent) String() string { return proto.CompactTextString(m) }
func (*Percent) ProtoMessage()    {}
func (*Percent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0731c5a473a53452, []int{6}
}

func (m *Percent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Percent.Unmarshal(m, b)
}
func (m *Percent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Percent.Marshal(b, m, deterministic)
}
func (m *Percent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Percent.Merge(m, src)
}
func (m *Percent) XXX_Size() int {
	return xxx_messageInfo_Percent.Size(m)
}
func (m *Percent) XXX_DiscardUnknown() {
	xxx_messageInfo_Percent.DiscardUnknown(m)
}

var xxx_messageInfo_Percent proto.InternalMessageInfo

func (m *Percent) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Degrees)(nil), "units.Degrees")
	proto.RegisterType((*Celsius)(nil), "units.Celsius")
	proto.RegisterType((*Meters)(nil), "units.Meters")
	proto.RegisterType((*Foot)(nil), "units.Foot")
	proto.RegisterType((*MetersPerSecond)(nil), "units.MetersPerSecond")
	proto.RegisterType((*Pascal)(nil), "units.Pascal")
	proto.RegisterType((*Percent)(nil), "units.Percent")
}

func init() { proto.RegisterFile("units/units.proto", fileDescriptor_0731c5a473a53452) }

var fileDescriptor_0731c5a473a53452 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x31, 0x0b, 0xc2, 0x30,
	0x14, 0x84, 0x29, 0xd8, 0x0a, 0x59, 0xc4, 0xe2, 0xe0, 0x20, 0x2a, 0x2e, 0xd5, 0xa5, 0x19, 0xfc,
	0x07, 0x2a, 0x6e, 0x42, 0xd1, 0xcd, 0x2d, 0x8d, 0x67, 0x0d, 0xb4, 0x49, 0x79, 0x49, 0xfc, 0xfd,
	0x62, 0x3b, 0xbf, 0xe5, 0xc1, 0x71, 0xf7, 0xb8, 0xe3, 0x13, 0xf3, 0x68, 0x4d, 0xf0, 0x72, 0xb8,
	0x65, 0x4f, 0x2e, 0xb8, 0x3c, 0x1d, 0xc4, 0x6e, 0x23, 0xa6, 0x17, 0x34, 0x04, 0xf8, 0x7c, 0x21,
	0xd2, 0xaf, 0x6a, 0x23, 0x96, 0xc9, 0x36, 0xd9, 0x27, 0xf7, 0x51, 0xfc, 0x03, 0x67, 0xb4, 0xde,
	0x44, 0x2e, 0xb0, 0x16, 0xd9, 0x0d, 0x01, 0xc4, 0xf9, 0x2b, 0x31, 0xb9, 0x3a, 0x17, 0x18, 0xb7,
	0x10, 0xb3, 0xf1, 0xbb, 0x02, 0x3d, 0xa0, 0x9d, 0x7d, 0xf1, 0x35, 0x95, 0xf2, 0x5a, 0xb5, 0xfc,
	0xce, 0x0a, 0xa4, 0x61, 0x99, 0xa6, 0xd3, 0xe1, 0x59, 0x34, 0x26, 0x7c, 0x62, 0x5d, 0x6a, 0xd7,
	0x49, 0x65, 0xa8, 0x53, 0xbd, 0x34, 0x36, 0x80, 0xde, 0x4a, 0xc3, 0xcb, 0x86, 0x7a, 0x3d, 0x12,
	0xaa, 0xb3, 0x01, 0xd1, 0xf1, 0x17, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x02, 0x59, 0xcb, 0x37, 0x01,
	0x00, 0x00,
}
